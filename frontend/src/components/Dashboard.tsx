import React, { useState, useEffect } from "react";
import { logout, getSystemInfo } from "../api/auth";
import BackgroundCanvas from "./BackgroundCanvas";
import "../styles/Dashboard.css";

interface User {
  id: number;
  username: string;
  is_admin: boolean;
  must_change_password: boolean;
}

interface DashboardProps {
  user: User;
  onLogout: () => void;
}

const Dashboard: React.FC<DashboardProps> = ({ user, onLogout }) => {
  const [activeTab, setActiveTab] = useState<"overview" | "users" | "settings">("overview");
  const [isLoggingOut, setIsLoggingOut] = useState(false);
  const [systemInfo, setSystemInfo] = useState<any>(null);
  const [systemLoading, setSystemLoading] = useState(true);
  
  // Kateg√≥ri√°k √∂sszecsukhat√≥s√°ga
  const [expandedCategories, setExpandedCategories] = useState({
    server: true,
    hardware: true,
    users: true,
    network: false,
    system: false
  });

  const toggleCategory = (category: keyof typeof expandedCategories) => {
    setExpandedCategories(prev => ({
      ...prev,
      [category]: !prev[category]
    }));
  };

  // System info bet√∂lt√©se
  useEffect(() => {
    const loadSystemInfo = async () => {
      try {
        const data = await getSystemInfo();
        setSystemInfo(data);
      } catch (error) {
        console.error("System info hiba:", error);
      } finally {
        setSystemLoading(false);
      }
    };

    loadSystemInfo();
    
    // 30 m√°sodpercenk√©nt friss√≠t√©s
    const interval = setInterval(loadSystemInfo, 30000);
    return () => clearInterval(interval);
  }, []);

  const handleLogout = async () => {
    setIsLoggingOut(true);
    try {
      await logout();
      onLogout();
    } catch (error) {
      console.error("Logout error:", error);
      // Akkor is kijelentkeztetj√ºk, ha a backend h√≠v√°s sikertelen
      onLogout();
    }
  };

  return (
    <div className="dashboard">
      <BackgroundCanvas />
      <div className="dashboard-overlay">
        {/* Header */}
        <header className="dashboard-header">
          <div className="header-left">
            <h1>üöÄ WebJS Admin</h1>
            <span className="version">v1.0</span>
          </div>
          <div className="header-right">
            <div className="user-info">
              <span className="username">üë§ {user.username}</span>
              {user.is_admin && <span className="admin-badge">ADMIN</span>}
            </div>
            <button 
              className="logout-btn" 
              onClick={handleLogout}
              disabled={isLoggingOut}
            >
              {isLoggingOut ? "..." : "Kijelentkez√©s"}
            </button>
          </div>
        </header>

      {/* Navigation */}
      <nav className="dashboard-nav">
        <button 
          className={`nav-btn ${activeTab === "overview" ? "active" : ""}`}
          onClick={() => setActiveTab("overview")}
        >
          üìä √Åttekint√©s
        </button>
        {user.is_admin && (
          <button 
            className={`nav-btn ${activeTab === "users" ? "active" : ""}`}
            onClick={() => setActiveTab("users")}
          >
            üë• Felhaszn√°l√≥k
          </button>
        )}
        <button 
          className={`nav-btn ${activeTab === "settings" ? "active" : ""}`}
          onClick={() => setActiveTab("settings")}
        >
          ‚öôÔ∏è Be√°ll√≠t√°sok
        </button>
      </nav>

      {/* Content */}
      <main className="dashboard-content">
        {activeTab === "overview" && (
          <div className="tab-content">
            <h2>üìà Rendszer √°ttekint√©s</h2>
            
            {systemLoading ? (
              <div className="loading-state">‚è≥ Rendszer inform√°ci√≥ bet√∂lt√©se...</div>
            ) : (
              <div className="dashboard-categories">
                
                {/* Szerver kateg√≥ria */}
                <div className="category-section">
                  <div 
                    className="category-header" 
                    onClick={() => toggleCategory('server')}
                  >
                    <h3>üñ•Ô∏è Szerver √°llapot</h3>
                    <span className={`category-toggle ${expandedCategories.server ? 'expanded' : ''}`}>
                      {expandedCategories.server ? '‚ñº' : '‚ñ∂'}
                    </span>
                  </div>
                  {expandedCategories.server && (
                    <div className="category-content">
                      <div className="stats-grid">
                        {/* Szerver √°llapot */}
                        <div className="stat-card server-status">
                          <h3>üü¢ Backend √°llapot</h3>
                          <p className="stat-value">M≈±k√∂dik</p>
                          <p className="stat-desc">FastAPI backend el√©rhet≈ë</p>
                          <div className="status-details">
                            <span>üêç Python {systemInfo?.system?.python_version}</span>
                            <span>üíª {systemInfo?.system?.platform}</span>
                          </div>
                        </div>

                        {/* API Endpoints */}
                        <div className="stat-card">
                          <h3>üîå API V√©gpontok</h3>
                          <p className="stat-value">‚úÖ M≈±k√∂dik</p>
                          <p className="stat-desc">√ñsszes endpoint el√©rhet≈ë</p>
                          <div className="api-status-list">
                            {systemInfo?.api_endpoints && Object.entries(systemInfo.api_endpoints).map(([key, status]: [string, any]) => (
                              <div key={key} className="api-endpoint">
                                <span className="endpoint-name">{key.replace(/_/g, ' ')}</span>
                                <span className="endpoint-status">{status}</span>
                              </div>
                            ))}
                          </div>
                        </div>

                        {/* Rendszer id≈ë */}
                        <div className="stat-card">
                          <h3>üïê Szerver id≈ë</h3>
                          <p className="stat-value">{new Date().toLocaleTimeString("hu-HU")}</p>
                          <p className="stat-desc">{new Date().toLocaleDateString("hu-HU")}</p>
                          <div className="status-details">
                            <span>‚è±Ô∏è Uptime: {systemInfo?.system?.uptime_hours?.toFixed(1) || 0}h</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* Hardver kateg√≥ria */}
                <div className="category-section">
                  <div 
                    className="category-header" 
                    onClick={() => toggleCategory('hardware')}
                  >
                    <h3>‚öôÔ∏è Hardver er≈ëforr√°sok</h3>
                    <span className={`category-toggle ${expandedCategories.hardware ? 'expanded' : ''}`}>
                      {expandedCategories.hardware ? '‚ñº' : '‚ñ∂'}
                    </span>
                  </div>
                  {expandedCategories.hardware && (
                    <div className="category-content">
                      <div className="stats-grid">
                        {/* CPU haszn√°lat */}
                        <div className="stat-card">
                          <h3>‚ö° CPU haszn√°lat</h3>
                          <p className="stat-value">{systemInfo?.cpu?.usage_percent?.toFixed(1) || 0}%</p>
                          <p className="stat-desc">
                            {systemInfo?.cpu?.cores || 0} mag
                            {systemInfo?.cpu?.frequency_mhz && ` ‚Ä¢ ${Math.round(systemInfo.cpu.frequency_mhz)} MHz`}
                          </p>
                          <div className="progress-bar">
                            <div 
                              className={`progress-fill ${(systemInfo?.cpu?.usage_percent || 0) > 80 ? 'high' : (systemInfo?.cpu?.usage_percent || 0) > 50 ? 'medium' : 'low'}`}
                              style={{ width: `${systemInfo?.cpu?.usage_percent || 0}%` }}
                            ></div>
                          </div>
                        </div>

                        {/* Mem√≥ria haszn√°lat */}
                        <div className="stat-card">
                          <h3>üß† Mem√≥ria haszn√°lat</h3>
                          <p className="stat-value">{systemInfo?.memory?.usage_percent?.toFixed(1) || 0}%</p>
                          <p className="stat-desc">
                            {systemInfo?.memory?.used_gb?.toFixed(1) || 0} / {systemInfo?.memory?.total_gb?.toFixed(1) || 0} GB
                            <br />
                            <small>Szabad: {systemInfo?.memory?.available_gb?.toFixed(1) || 0} GB</small>
                          </p>
                          <div className="progress-bar">
                            <div 
                              className={`progress-fill ${(systemInfo?.memory?.usage_percent || 0) > 80 ? 'high' : (systemInfo?.memory?.usage_percent || 0) > 60 ? 'medium' : 'low'}`}
                              style={{ width: `${systemInfo?.memory?.usage_percent || 0}%` }}
                            ></div>
                          </div>
                        </div>

                        {/* Disk haszn√°lat */}
                        <div className="stat-card">
                          <h3>üíæ T√°rhely haszn√°lat</h3>
                          <p className="stat-value">{systemInfo?.disk?.usage_percent?.toFixed(1) || 0}%</p>
                          <p className="stat-desc">
                            {systemInfo?.disk?.used_gb?.toFixed(1) || 0} / {systemInfo?.disk?.total_gb?.toFixed(1) || 0} GB
                            <br />
                            <small>Szabad: {systemInfo?.disk?.free_gb?.toFixed(1) || 0} GB</small>
                          </p>
                          <div className="progress-bar">
                            <div 
                              className={`progress-fill ${(systemInfo?.disk?.usage_percent || 0) > 90 ? 'high' : (systemInfo?.disk?.usage_percent || 0) > 70 ? 'medium' : 'low'}`}
                              style={{ width: `${systemInfo?.disk?.usage_percent || 0}%` }}
                            ></div>
                          </div>
                        </div>

                        {/* Folyamatok */}
                        <div className="stat-card">
                          <h3>üîÑ Rendszer folyamatok</h3>
                          <p className="stat-value">{systemInfo?.processes?.count || 0}</p>
                          <p className="stat-desc">Fut√≥ folyamatok sz√°ma</p>
                          <div className="status-details">
                            <span>üìä Akt√≠v: {systemInfo?.processes?.count || 0}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* Felhaszn√°l√≥k kateg√≥ria */}
                <div className="category-section">
                  <div 
                    className="category-header" 
                    onClick={() => toggleCategory('users')}
                  >
                    <h3>üë• Bejelentkezett felhaszn√°l√≥k</h3>
                    <span className={`category-toggle ${expandedCategories.users ? 'expanded' : ''}`}>
                      {expandedCategories.users ? '‚ñº' : '‚ñ∂'}
                    </span>
                  </div>
                  {expandedCategories.users && (
                    <div className="category-content">
                      <div className="stats-grid">
                        {/* Akt√≠v felhaszn√°l√≥ */}
                        <div className="stat-card">
                          <h3>üë§ Akt√≠v felhaszn√°l√≥</h3>
                          <p className="stat-value">{user.username}</p>
                          <p className="stat-desc">Bejelentkezve</p>
                          <div className="status-details">
                            <span>{user.is_admin ? "üîë Admin jogok" : "üëÅÔ∏è Alap jogok"}</span>
                          </div>
                        </div>

                        {/* √ñsszes felhaszn√°l√≥ (placeholder) */}
                        <div className="stat-card">
                          <h3>üìä Felhaszn√°l√≥k √∂sszesen</h3>
                          <p className="stat-value">1</p>
                          <p className="stat-desc">Regisztr√°lt felhaszn√°l√≥k</p>
                          <div className="status-details">
                            <span>üîë Admin: 1</span>
                            <span>üëÅÔ∏è Norm√°l: 0</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* H√°l√≥zat kateg√≥ria */}
                <div className="category-section">
                  <div 
                    className="category-header" 
                    onClick={() => toggleCategory('network')}
                  >
                    <h3>üåê H√°l√≥zat & kommunik√°ci√≥</h3>
                    <span className={`category-toggle ${expandedCategories.network ? 'expanded' : ''}`}>
                      {expandedCategories.network ? '‚ñº' : '‚ñ∂'}
                    </span>
                  </div>
                  {expandedCategories.network && (
                    <div className="category-content">
                      <div className="stats-grid">
                        {/* H√°l√≥zat */}
                        <div className="stat-card">
                          <h3>üåê H√°l√≥zati forgalom</h3>
                          <p className="stat-value">üü¢ Akt√≠v</p>
                          <p className="stat-desc">Adatforgalom statisztika</p>
                          <div className="network-stats">
                            <div className="network-item">
                              <span>üì§ K√ºld√∂tt:</span>
                              <span>{systemInfo?.network?.bytes_sent ? (systemInfo.network.bytes_sent / (1024**3)).toFixed(2) + ' GB' : '0 GB'}</span>
                            </div>
                            <div className="network-item">
                              <span>üì• Fogadott:</span>
                              <span>{systemInfo?.network?.bytes_recv ? (systemInfo.network.bytes_recv / (1024**3)).toFixed(2) + ' GB' : '0 GB'}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* Rendszer inform√°ci√≥ kateg√≥ria */}
                <div className="category-section">
                  <div 
                    className="category-header" 
                    onClick={() => toggleCategory('system')}
                  >
                    <h3>üñ•Ô∏è R√©szletes rendszer inform√°ci√≥</h3>
                    <span className={`category-toggle ${expandedCategories.system ? 'expanded' : ''}`}>
                      {expandedCategories.system ? '‚ñº' : '‚ñ∂'}
                    </span>
                  </div>
                  {expandedCategories.system && (
                    <div className="category-content">
                      <div className="stats-grid">
                        {/* Rendszer info */}
                        <div className="stat-card system-info-card">
                          <h3>üñ•Ô∏è Rendszer inform√°ci√≥</h3>
                          <div className="system-details">
                            <div className="detail-item">
                              <span className="label">Hostname:</span>
                              <span className="value">{systemInfo?.system?.hostname || "N/A"}</span>
                            </div>
                            <div className="detail-item">
                              <span className="label">Platform:</span>
                              <span className="value">{systemInfo?.system?.platform || "N/A"}</span>
                            </div>
                            <div className="detail-item">
                              <span className="label">Architekt√∫ra:</span>
                              <span className="value">{systemInfo?.system?.architecture || "N/A"}</span>
                            </div>
                            <div className="detail-item">
                              <span className="label">Processzor:</span>
                              <span className="value">{systemInfo?.system?.processor?.substring(0, 30) || "N/A"}</span>
                            </div>
                            <div className="detail-item">
                              <span className="label">Boot id≈ë:</span>
                              <span className="value">{systemInfo?.system?.boot_time || "N/A"}</span>
                            </div>
                            <div className="detail-item">
                              <span className="label">Friss√≠tve:</span>
                              <span className="value">{systemInfo?.timestamp ? new Date(systemInfo.timestamp).toLocaleTimeString("hu-HU") : new Date().toLocaleTimeString("hu-HU")}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

              </div>
            )}
          </div>
        )}

        {activeTab === "users" && user.is_admin && (
          <div className="tab-content">
            <h2>üë• Felhaszn√°l√≥k kezel√©se</h2>
            <div className="users-section">
              <div className="section-header">
                <h3>Regisztr√°lt felhaszn√°l√≥k</h3>
                <button className="btn-primary">‚ûï √öj felhaszn√°l√≥</button>
              </div>
              <div className="users-list">
                <div className="user-item">
                  <div className="user-info">
                    <span className="user-name">admin</span>
                    <span className="user-role">Administrator</span>
                  </div>
                  <div className="user-actions">
                    <button className="btn-secondary">‚úèÔ∏è Szerkeszt√©s</button>
                    <button className="btn-danger">üóëÔ∏è T√∂rl√©s</button>
                  </div>
                </div>
                <div className="empty-state">
                  <p>üí° Itt jelennek meg a tov√°bbi felhaszn√°l√≥k...</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === "settings" && (
          <div className="tab-content">
            <h2>‚öôÔ∏è Be√°ll√≠t√°sok</h2>
            <div className="settings-section">
              <div className="setting-group">
                <h3>üîí Biztons√°gi be√°ll√≠t√°sok</h3>
                <div className="setting-item">
                  <label>Jelsz√≥ automatikus lej√°rata (nap)</label>
                  <input type="number" defaultValue="90" />
                </div>
                <div className="setting-item">
                  <label>Maximum bejelentkez√©si k√≠s√©rletek</label>
                  <input type="number" defaultValue="5" />
                </div>
              </div>
              
              <div className="setting-group">
                <h3>üé® Megjelen√©s</h3>
                <div className="setting-item">
                  <label>S√∂t√©t m√≥d</label>
                  <input type="checkbox" defaultChecked />
                </div>
              </div>

              <button className="btn-primary">üíæ Be√°ll√≠t√°sok ment√©se</button>
            </div>
          </div>
        )}
      </main>
      </div>
    </div>
  );
};

export default Dashboard;
